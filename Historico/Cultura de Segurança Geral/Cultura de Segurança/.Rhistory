IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
facet_wrap(trab1y~.) +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
df$acreditacao <- factor(df$acreditacao, levels = c('NAH', 'AH'))
table(df$acreditacao)
analise_grafica = function(coluna, titulo){
grupo = df[[coluna]]
grupo0 = df[[coluna]][df$trab1y == 'TSIA ≥ 1 year']
grupo1 = df[[coluna]][df$trab1y == 'TSIA < 1 year']
#Teste de Hipotese - Teste Mann Whitney
teste_man = wilcox.test(grupo1,grupo0,conf.int = TRUE)
man = retorne_p_ajust(retorne_p(teste_man$p.value))
#Estimador Hodges Lehmann
estimador = as.character(rround(teste_man$estimate,2))
IC_00 = as.character(rround(teste_man$conf.int[1],2))
IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
facet_wrap(trab1y~.) +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
df$acreditacao <- factor(df$acreditacao, levels = c('NAH', 'AH'))
table(df$acreditacao)
analise_grafica = function(coluna, titulo){
grupo = df[[coluna]]
grupo0 = df[[coluna]][df$trab1y == 'TSIA ≥ 1 year']
grupo1 = df[[coluna]][df$trab1y == 'TSIA < 1 year']
#Teste de Hipotese - Teste Mann Whitney
teste_man = wilcox.test(grupo1,grupo0,conf.int = TRUE)
man = retorne_p_ajust(retorne_p(teste_man$p.value))
#Estimador Hodges Lehmann
estimador = as.character(rround(teste_man$estimate,2))
IC_00 = as.character(rround(teste_man$conf.int[1],2))
IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
df$acreditacao <- factor(df$acreditacao, levels = c('NAH', 'AH'))
table(df$acreditacao)
analise_grafica = function(coluna, titulo){
grupo = df[[coluna]]
grupo0 = df[[coluna]][df$trab1y == 'TSIA < 1 year']
grupo1 = df[[coluna]][df$trab1y == 'TSIA ≥ 1 year']
#Teste de Hipotese - Teste Mann Whitney
teste_man = wilcox.test(grupo1,grupo0,conf.int = TRUE)
man = retorne_p_ajust(retorne_p(teste_man$p.value))
#Estimador Hodges Lehmann
estimador = as.character(rround(teste_man$estimate,2))
IC_00 = as.character(rround(teste_man$conf.int[1],2))
IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
analise_grafica2 = function(coluna, titulo){
df_filter1 = df %>% filter(trab1y == 'TSIA < 1 year')
df_filter2 = df %>% filter(trab1y == 'TSIA ≥ 1 year')
#p1 = retorne_p_ajust(retorne_p(summary(lm(df_filter1[[coluna]]~Ano, data=df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = retorne_p_ajust(retorne_p(summary(lmer(df_filter1[[coluna]] ~ Ano + (1 | Unidade), data = df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = paste0('AH (', p1, ')')
#p2 = retorne_p_ajust(retorne_p(summary(lm(df_filter2[[coluna]]~Ano, data=df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = retorne_p_ajust(retorne_p(summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = paste0('NAH (', p2, ')')
subtitulo = paste0(p1, ";  ", p2)
ggplot() +
geom_jitter(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, size=2.5, position=position_jitter(0.25)) +
geom_boxplot(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, fill = 'white') +
geom_smooth(data=df, aes(x=Ano, y=df[[coluna]]), method = lm, color = "black") +
facet_grid(trab1y~.) +
scale_x_continuous(breaks=seq(from=min(df$Ano), to=max(df$Ano), by=1)) +
scale_y_continuous(breaks=seq(from=as.integer(min(df[[coluna]])),
to=as.integer(max(df[[coluna]])),
by=as.integer((max(df[[coluna]]) - min(df[[coluna]]))/6))) +
theme(axis.title=element_text(size=9),
legend.position = "none", axis.line = element_line(colour = "black")) +
theme_bw() + theme(legend.position="none") +
labs(subtitle=subtitulo, title=adicionar_quebra_de_linha(titulo, 38), y='Score (%)', x='Year')
}
analise_grafica2('Abertura de comunicação', 'Open communication')
analise_grafica2('Nota Geral == Boa ?', '')
#ggsave("Proporção_notas.png", height=16, width=18, units="cm", dpi= 600)
#GERAL
(analise_grafica2('Abertura de comunicação', 'Open communication') + analise_grafica2('Feedback e comunicação sobre erros', 'Feedback and communication about errors') + analise_grafica2('Frequência de eventos relatados', 'Frequency of reported events')) /
(analise_grafica2('Apoio de gestão hospitalar para segurança do paciente', 'Hospital management support for patient safety') + analise_grafica2('Trabalho em equipe entre as unidades hospitalares', 'Teamwork between hospital units') + analise_grafica2('Trabalho em equipe no âmbito das unidades', 'Teamwork within units')) /
(analise_grafica2('Transferências internas e passagens de plantão', 'Internal transfers and shift changes') + analise_grafica2('Aprendizado organizacional - melhoria contínua', 'Organizational learning - continuous improvement') + analise_grafica2('Expectativas de promoção da segurança dos supervisores e gerentes', 'Expectations for promoting safety by supervisors and managers')) /
(analise_grafica2('Percepção gerais sobre segurança', 'General perceptions about safety') + analise_grafica2('Respostas não punitivas aos erros', 'Non-punitive responses to errors') + analise_grafica2('Staffing', 'Staffing'))
#ggsave("Agrupamentos2.png", height=44, width=30, units="cm", dpi=600)
setwd("C:/Users/ADM/Onedrive/Documentos/Cultura de Segurança")
df <- read_excel("4 - Dados_Score_Ano_vs_Acreditacao_vs_Unidade_tempotrab.xlsx")
df$acreditacao = ifelse(df$acreditacao == 1, 'AH', 'NAH')
df$acreditacao = as.factor(df$acreditacao)
levels(df$acreditacao)
names(df)[names(df) == "trabalha_mais_1ano"] = "trab1y"
df$trab1y = ifelse(df$trab1y == 1, 'TSIA < 1 year', 'TSIA ≥ 1 year')
df$trab1y = as.factor(df$trab1y)
levels(df$trab1y)
df_backup = df
df
df$acreditacao <- factor(df$acreditacao, levels = c('NAH', 'AH'))
table(df$acreditacao)
analise_grafica = function(coluna, titulo){
grupo = df[[coluna]]
grupo0 = df[[coluna]][df$trab1y == 'TSIA < 1 year']
grupo1 = df[[coluna]][df$trab1y == 'TSIA ≥ 1 year']
#Teste de Hipotese - Teste Mann Whitney
teste_man = wilcox.test(grupo1,grupo0,conf.int = TRUE)
man = retorne_p_ajust(retorne_p(teste_man$p.value))
#Estimador Hodges Lehmann
estimador = as.character(rround(teste_man$estimate,2))
IC_00 = as.character(rround(teste_man$conf.int[1],2))
IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
analise_grafica2 = function(coluna, titulo){
df_filter1 = df %>% filter(trab1y == 'TSIA ≥ 1 year')
df_filter2 = df %>% filter(trab1y == 'TSIA < 1 year')
#p1 = retorne_p_ajust(retorne_p(summary(lm(df_filter1[[coluna]]~Ano, data=df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = retorne_p_ajust(retorne_p(summary(lmer(df_filter1[[coluna]] ~ Ano + (1 | Unidade), data = df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = paste0('TSIA ≥ 1 year (', p1, ')')
#p2 = retorne_p_ajust(retorne_p(summary(lm(df_filter2[[coluna]]~Ano, data=df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = retorne_p_ajust(retorne_p(summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = paste0('TSIA < 1 year (', p2, ')')
subtitulo = paste0(p1, ";  ", p2)
ggplot() +
geom_jitter(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, size=2.5, position=position_jitter(0.25)) +
geom_boxplot(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, fill = 'white') +
geom_smooth(data=df, aes(x=Ano, y=df[[coluna]]), method = lm, color = "black") +
facet_grid(trab1y~.) +
scale_x_continuous(breaks=seq(from=min(df$Ano), to=max(df$Ano), by=1)) +
scale_y_continuous(breaks=seq(from=as.integer(min(df[[coluna]])),
to=as.integer(max(df[[coluna]])),
by=as.integer((max(df[[coluna]]) - min(df[[coluna]]))/6))) +
theme(axis.title=element_text(size=9),
legend.position = "none", axis.line = element_line(colour = "black")) +
theme_bw() + theme(legend.position="none") +
labs(subtitle=subtitulo, title=adicionar_quebra_de_linha(titulo, 38), y='Score (%)', x='Year')
}
analise_grafica2('Abertura de comunicação', 'Open communication')
analise_grafica2('Nota Geral == Boa ?', '')
ggsave("Proporção_notas.png", height=16, width=18, units="cm", dpi= 600)
#GERAL
(analise_grafica2('Abertura de comunicação', 'Open communication') + analise_grafica2('Feedback e comunicação sobre erros', 'Feedback and communication about errors') + analise_grafica2('Frequência de eventos relatados', 'Frequency of reported events')) /
(analise_grafica2('Apoio de gestão hospitalar para segurança do paciente', 'Hospital management support for patient safety') + analise_grafica2('Trabalho em equipe entre as unidades hospitalares', 'Teamwork between hospital units') + analise_grafica2('Trabalho em equipe no âmbito das unidades', 'Teamwork within units')) /
(analise_grafica2('Transferências internas e passagens de plantão', 'Internal transfers and shift changes') + analise_grafica2('Aprendizado organizacional - melhoria contínua', 'Organizational learning - continuous improvement') + analise_grafica2('Expectativas de promoção da segurança dos supervisores e gerentes', 'Expectations for promoting safety by supervisors and managers')) /
(analise_grafica2('Percepção gerais sobre segurança', 'General perceptions about safety') + analise_grafica2('Respostas não punitivas aos erros', 'Non-punitive responses to errors') + analise_grafica2('Staffing', 'Staffing'))
ggsave("Agrupamentos2.png", height=44, width=30, units="cm", dpi=600)
setwd("C:/Users/ADM/Onedrive/Documentos/Cultura de Segurança")
df <- read_excel("Dados_Score - Ano_Trab_1y")
setwd("C:/Users/ADM/Onedrive/Documentos/Cultura de Segurança")
df <- read_excel("Dados_Score - Ano_Trab_1y.xlsx")
#df$acreditacao = ifelse(df$acreditacao == 1, 'AH', 'NAH')
#df$acreditacao = as.factor(df$acreditacao)
#levels(df$acreditacao)
names(df)[names(df) == "trabalha_mais_1ano"] = "trab1y"
df$trab1y = ifelse(df$trab1y == 1, 'TSIA < 1 year', 'TSIA ≥ 1 year')
names(df)
setwd("C:/Users/ADM/Onedrive/Documentos/Cultura de Segurança")
df <- read_excel("Dados_Score - Ano_Trab_1y.xlsx")
#df$acreditacao = ifelse(df$acreditacao == 1, 'AH', 'NAH')
#df$acreditacao = as.factor(df$acreditacao)
#levels(df$acreditacao)
names(df)[names(df) == "trab_1y"] = "trab1y"
df$trab1y = ifelse(df$trab1y == 1, 'TSIA < 1 year', 'TSIA ≥ 1 year')
df$trab1y = as.factor(df$trab1y)
levels(df$trab1y)
df_backup = df
df
setwd("C:/Users/ADM/Onedrive/Documentos/Cultura de Segurança")
df <- read_excel("Dados_Score - Ano_Trab_1y.xlsx")
#df$acreditacao = ifelse(df$acreditacao == 1, 'AH', 'NAH')
#df$acreditacao = as.factor(df$acreditacao)
#levels(df$acreditacao)
names(df)[names(df) == "trab_1y"] = "trab1y"
df$trab1y = ifelse(df$trab1y == 1, 'TSIA ≥ 1 year', 'TSIA < 1 year')
df$trab1y = factor(df$trab1y, levels = c('TSIA < 1 year', 'TSIA ≥ 1 year'))
df$trab1y = as.factor(df$trab1y)
levels(df$trab1y)
df_backup = df
df
df$acreditacao <- factor(df$acreditacao, levels = c('NAH', 'AH'))
analise_grafica = function(coluna, titulo){
grupo = df[[coluna]]
grupo0 = df[[coluna]][df$trab1y == 'TSIA < 1 year']
grupo1 = df[[coluna]][df$trab1y == 'TSIA ≥ 1 year']
#Teste de Hipotese - Teste Mann Whitney
teste_man = wilcox.test(grupo1,grupo0,conf.int = TRUE)
man = retorne_p_ajust(retorne_p(teste_man$p.value))
#Estimador Hodges Lehmann
estimador = as.character(rround(teste_man$estimate,2))
IC_00 = as.character(rround(teste_man$conf.int[1],2))
IC_01 = as.character(rround(teste_man$conf.int[2],2))
hodges_lehmann = paste0(estimador,' [',IC_00,' to ',IC_01,']')
texto_dentro_do_grafico = paste0(man)
eixo_x = paste0("Median of Differences = ", hodges_lehmann)
ggplot() +
geom_jitter(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.5, size=2.5, position=position_jitter(0.25), show.legend = F) +
geom_violin(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
show.legend = F, alpha=0.2) +
geom_boxplot(data=df, aes(x=as.factor(trab1y), y=df[[coluna]], fill=as.factor(trab1y)),
alpha=0.90, show.legend = F, width = 0.5, fill = 'white') +
annotate("text", x = 1.5, y = max(df[[coluna]],na.rm = T),
label = texto_dentro_do_grafico, vjust = 0.7, size = 4, color = "black") +
labs(y='Score (%)', title=adicionar_quebra_de_linha(titulo, 38), x=eixo_x) +
theme(axis.title=element_text(size=9),
legend.position = "bottom", axis.line = element_line(colour = "black")) +
theme_bw() +
scale_y_continuous(breaks=seq(from = 0,
to = max(df[[coluna]],na.rm = T),
by = as.integer((max(df[[coluna]],na.rm = T) - min(df[[coluna]],na.rm = T))/10)),
limits = c(min(df[[coluna]],na.rm = T), max(df[[coluna]],na.rm = T))) +
theme(axis.title.x = element_text(size = 11),
axis.title.y = element_text(size = 11))
}
analise_grafica('Abertura de comunicação', 'Open communication')
analise_grafica2 = function(coluna, titulo){
df_filter1 = df %>% filter(trab1y == 'TSIA ≥ 1 year')
df_filter2 = df %>% filter(trab1y == 'TSIA < 1 year')
#p1 = retorne_p_ajust(retorne_p(summary(lm(df_filter1[[coluna]]~Ano, data=df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = retorne_p_ajust(retorne_p(summary(lmer(df_filter1[[coluna]] ~ Ano + (1 | Unidade), data = df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = paste0('TSIA ≥ 1 year (', p1, ')')
#p2 = retorne_p_ajust(retorne_p(summary(lm(df_filter2[[coluna]]~Ano, data=df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = retorne_p_ajust(retorne_p(summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = paste0('TSIA < 1 year (', p2, ')')
subtitulo = paste0(p1, ";  ", p2)
ggplot() +
geom_jitter(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, size=2.5, position=position_jitter(0.25)) +
geom_boxplot(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, fill = 'white') +
geom_smooth(data=df, aes(x=Ano, y=df[[coluna]]), method = lm, color = "black") +
facet_grid(trab1y~.) +
scale_x_continuous(breaks=seq(from=min(df$Ano), to=max(df$Ano), by=1)) +
scale_y_continuous(breaks=seq(from=as.integer(min(df[[coluna]])),
to=as.integer(max(df[[coluna]])),
by=as.integer((max(df[[coluna]]) - min(df[[coluna]]))/6))) +
theme(axis.title=element_text(size=9),
legend.position = "none", axis.line = element_line(colour = "black")) +
theme_bw() + theme(legend.position="none") +
labs(subtitle=subtitulo, title=adicionar_quebra_de_linha(titulo, 38), y='Score (%)', x='Year')
}
analise_grafica2('Abertura de comunicação', 'Open communication')
analise_grafica2('Nota Geral == Boa ?', '')
lista = c('1. As pessoas se apoiam umas às outras nesta unidade',
'2. Temos pessoas suficientes para lidar com o volume de trabalho',
'3. Quando há muito trabalho a ser feito e rapidamente, trabalhamos juntos em equipe para realizar a tarefa',
'4. Nesta unidade, as pessoas se tratam com respeito',
'5. Os funcionários desta unidade trabalham mais horas do que o recomendado no atendimento a pacientes',
'6. Estamos ativamente buscando melhorias para a segurança do paciente',
'7. Utilizamos mais funcionários temporários do que o recomendado no atendimento a paciente',
'8. Os funcionários sentem que seus erros são usados contra eles',
'9. Erros que ocorreram levaram a mudanças positivas nesta unidade',
'10. É apenas por acaso que erros mais sérios não acontecem por aqui',
'11. Quando uma área nesta unidade fica muito movimentada, as demais ajudam',
'12. Quando um evento é notificado, sentimos que o foco se concentra no indivíduo, e não no problema',
'13. Quando fazemos mudanças para melhorar a segurança do paciente, nós avaliamos sua efetividade',
'14. Trabalhamos “em modo de crise”, tentando fazer coisas demais, rápido demais',
'15. A segurança do paciente nunca é sacrificada em prol de se trabalhar mais',
'16. Os funcionários se preocupam que seus erros sejam registrados em seu arquivo funcional',
'17. Temos problemas com a segurança do paciente nesta unidade',
'18. Nossos procedimentos e sistemas são bons para impedir que os erros aconteçam',
'19. Meu supervisor/gerente elogia quando vê um trabalho feito de acordo com os procedimentos estabelecidos para a segurança do paciente.',
'20. Meu supervisor/gerente considera seriamente as sugestões dos funcionários para melhorar a segurança do paciente',
'21. Sempre que a pressão aumenta, meu supervisor/gerente quer que trabalhemos mais rápido, mesmo que isto signifique tomar atalhos',
'22. Meu supervisor/gerente ignora problemas recorrentes na segurança do paciente',
'23. Recebemos feedback das mudanças implementadas com base nos eventos notificados',
'24. Os funcionários falam voluntariamente se vêem algo que possa afetar negativamente o atendimento aos pacientes',
'25. Somos informados sobre os erros que acontecem nesta unidade',
'26. Os funcionários sentem-se à vontade para questionar decisões ou ações dos que têm mais autoridade',
'27. Nesta unidade, discutimos maneiras de impedir que os erros tornem a acontecer',
'28. Os funcionários têm receio de perguntar quando algo não parece certo',
'29. Quando acontece um erro, mas ele é identificado e corrigido antes de afetar o paciente, com que frequência é notificado?',
'30. Quando acontece um erro, mas que não tem potencial de dano ao paciente, com que frequência é notificado?',
'31. Quando acontece um erro que poderia prejudicar o paciente, mas isto não ocorreu, com que frequência é notificado?',
#'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar.',
'32. A administração do hospital cria um ambiente de trabalho que promove a segurança do paciente',
'33. As unidades hospitalares não se coordenam bem entre si.',
'34. Coisas "escapam por entre os dedos” quando os pacientes são transferidos de uma unidade para outra',
'35. Existe uma boa cooperação entre as unidades hospitalares que precisam trabalhar juntas',
'36. Importantes informações sobre a assistência se perdem durante as mudanças de turno',
'37. Muitas vezes é desagradável trabalhar unidades com funcionários de outras unidades do hospital',
'38. Os problemas com frequência ocorrem na troca de informações entre as unidades do hospital',
'39. As ações da administração do hospital mostram que a segurança do paciente é uma prioridade máxima',
'40. A administração do hospital parece se interessar pela segurança do paciente apenas quando acontece um evento adverso',
'41. As unidades do hospital trabalham bem juntas para prestar o melhor atendimento aos pacientes',
'42. As mudanças de turno são problemáticas para os pacientes deste Hospital')
colunas_adicionais <- c('Abertura de comunicação', 'Feedback e comunicação sobre erros', 'Frequência de eventos relatados',
'Apoio de gestão hospitalar para segurança do paciente', 'Trabalho em equipe entre as unidades hospitalares',
'Trabalho em equipe no âmbito das unidades', 'Transferências internas e passagens de plantão',
'Aprendizado organizacional - melhoria contínua', 'Expectativas de promoção da segurança dos supervisores e gerentes',
'Percepção gerais sobre segurança', 'Respostas não punitivas aos erros', 'Staffing')
lista = c(lista, colunas_adicionais)
colunas_adicionais = c('SEÇÃO G2: Notificou algum evento nos ultimos 12 meses',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_0. Nenhuma notificações de eventos',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_1. 1 a 2 notificações de eventos',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_2. 3 a 5 notificações de eventos',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_3. 6 a 10 notificações de eventos',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_4. 11 a 20 notificações de eventos',
'SEÇÃO G: Número de Eventos Notificados  Nos últimos 12 meses, quantas notificações de evento você preencheu e enviou?_5. 21 notificações de eventos ou mais',
'SEÇÃO H: 3.2 Trabalha mais que 40horas semanais',
'SEÇÃO H: 3.2 Trabalha mais que 60horas semanais',
'SEÇÃO H: 3.2 Trabalha mais que 80horas semanais',
'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar._Excelente',
'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar._Muito boa',
'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar._Muito ruim',
'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar._Ruim',
'Por favor, dê uma nota geral para a segurança do paciente em sua área/unidade de trabalho hospitalar._Satisfatória',
'Nota Geral == Satisfatoria ?', 'Nota Geral == Boa ?',
'SEÇÃO H: 1.2 trabalha a mais de 1 ano no hospital?',
'SEÇÃO H: 1.3 trabalha a mais de 5 anos no hospital?',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_0. Menos de 1 ano',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_1. 1 a 5 anos',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_2. 6 a 10 anos',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_3. 11 a 15 anos',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_4. 16 a 20 anos',
'SEÇÃO H: 1. Há quanto tempo você trabalha neste hospital?_5. 21 anos ou mais',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_0. Menos de 1 ano',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_1. 1 a 5 anos',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_2. 6 a 10 anos',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_3. 11 a 15 anos',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_4. 16 a 20 anos',
'6. Há quanto tempo você trabalha em sua profissão ou especialização atual?_5. 21 anos ou mais')
lista = c(lista, colunas_adicionais)
analise_grafica2 = function(coluna, titulo){
df_filter1 = df %>% filter(trab1y == 'TSIA ≥ 1 year')
df_filter2 = df %>% filter(trab1y == 'TSIA < 1 year')
#p1 = retorne_p_ajust(retorne_p(summary(lm(df_filter1[[coluna]]~Ano, data=df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = retorne_p_ajust(retorne_p(summary(lmer(df_filter1[[coluna]] ~ Ano + (1 | Unidade), data = df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = paste0('TSIA ≥ 1 year (', p1, ')')
#p2 = retorne_p_ajust(retorne_p(summary(lm(df_filter2[[coluna]]~Ano, data=df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = retorne_p_ajust(retorne_p(summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = paste0('TSIA < 1 year (', p2, ')')
subtitulo = paste0(p1, ";  ", p2)
ggplot() +
geom_jitter(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, size=2.5, position=position_jitter(0.25)) +
geom_boxplot(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, fill = 'white') +
geom_smooth(data=df, aes(x=Ano, y=df[[coluna]]), method = lm, color = "black") +
facet_grid(trab1y~.) +
scale_x_continuous(breaks=seq(from=min(df$Ano), to=max(df$Ano), by=1)) +
scale_y_continuous(breaks=seq(from=as.integer(min(df[[coluna]])),
to=as.integer(max(df[[coluna]])),
by=as.integer((max(df[[coluna]]) - min(df[[coluna]]))/6))) +
theme(axis.title=element_text(size=9),
legend.position = "none", axis.line = element_line(colour = "black")) +
theme_bw() + theme(legend.position="none") +
labs(subtitle=subtitulo, title=adicionar_quebra_de_linha(titulo, 38), y='Score (%)', x='Year')
}
analise_grafica2('Abertura de comunicação', 'Open communication')
analise_grafica2('Abertura de comunicação', 'Open communication')
summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"])
analise_grafica2 = function(coluna, titulo){
df_filter1 = df %>% filter(trab1y == 'TSIA ≥ 1 year')
df_filter2 = df %>% filter(trab1y == 'TSIA < 1 year')
p1 = retorne_p_ajust(retorne_p(summary(lm(df_filter1[[coluna]]~Ano, data=df_filter1))$coefficients[2, "Pr(>|t|)"]))
#p1 = retorne_p_ajust(retorne_p(summary(lmer(df_filter1[[coluna]] ~ Ano + (1 | Unidade), data = df_filter1))$coefficients[2, "Pr(>|t|)"]))
p1 = paste0('TSIA ≥ 1 year (', p1, ')')
p2 = retorne_p_ajust(retorne_p(summary(lm(df_filter2[[coluna]]~Ano, data=df_filter2))$coefficients[2, "Pr(>|t|)"]))
#p2 = retorne_p_ajust(retorne_p(summary(lmer(df_filter2[[coluna]] ~ Ano + (1 | Unidade), data = df_filter2))$coefficients[2, "Pr(>|t|)"]))
p2 = paste0('TSIA < 1 year (', p2, ')')
subtitulo = paste0(p1, ";  ", p2)
ggplot() +
geom_jitter(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, size=2.5, position=position_jitter(0.25)) +
geom_boxplot(data=df, aes(x=Ano, y=df[[coluna]], color=as.factor(Ano)),
alpha=0.5, fill = 'white') +
geom_smooth(data=df, aes(x=Ano, y=df[[coluna]]), method = lm, color = "black") +
facet_grid(trab1y~.) +
scale_x_continuous(breaks=seq(from=min(df$Ano), to=max(df$Ano), by=1)) +
scale_y_continuous(breaks=seq(from=as.integer(min(df[[coluna]])),
to=as.integer(max(df[[coluna]])),
by=as.integer((max(df[[coluna]]) - min(df[[coluna]]))/6))) +
theme(axis.title=element_text(size=9),
legend.position = "none", axis.line = element_line(colour = "black")) +
theme_bw() + theme(legend.position="none") +
labs(subtitle=subtitulo, title=adicionar_quebra_de_linha(titulo, 38), y='Score (%)', x='Year')
}
analise_grafica2('Abertura de comunicação', 'Open communication')
analise_grafica2('Nota Geral == Boa ?', '')
ggsave("Proporção_notas.png", height=16, width=18, units="cm", dpi= 600)
#GERAL
(analise_grafica2('Abertura de comunicação', 'Open communication') + analise_grafica2('Feedback e comunicação sobre erros', 'Feedback and communication about errors') + analise_grafica2('Frequência de eventos relatados', 'Frequency of reported events')) /
(analise_grafica2('Apoio de gestão hospitalar para segurança do paciente', 'Hospital management support for patient safety') + analise_grafica2('Trabalho em equipe entre as unidades hospitalares', 'Teamwork between hospital units') + analise_grafica2('Trabalho em equipe no âmbito das unidades', 'Teamwork within units')) /
(analise_grafica2('Transferências internas e passagens de plantão', 'Internal transfers and shift changes') + analise_grafica2('Aprendizado organizacional - melhoria contínua', 'Organizational learning - continuous improvement') + analise_grafica2('Expectativas de promoção da segurança dos supervisores e gerentes', 'Expectations for promoting safety by supervisors and managers')) /
(analise_grafica2('Percepção gerais sobre segurança', 'General perceptions about safety') + analise_grafica2('Respostas não punitivas aos erros', 'Non-punitive responses to errors') + analise_grafica2('Staffing', 'Staffing'))
#library(devtools) #criar e baixar pacotes de outros usuarios
library(readxl) #Importar arquvios excel ==> read_excel(".xlsx)
library(skimr) #resumo dos dados do dataframe => skim(df)
library(dplyr) #manipulação de dados
library(tidyr) #manipulação de dados
library(magrittr) #operador pipe line %>%
library(reshape2) #manipulação de formato de dataframe
library(janitor) #tabela de contigencia
library(RcmdrMisc) #summary diferenciado ==> numSummary()
install.packages("RcmdrMisc", repos="https://cran.rediris.org/", dependencies=TRUE)
library(RcmdrMisc)
install.packages("htmltools")
install.packages("htmltools")
install.packages("C:/Users/ADM/Downloads/htmltools_0.5.7.zip", repos = NULL, type = "win.binary")
library(RcmdrMisc)
install.packages("C:/Users/ADM/Downloads/htmltools_0.5.7.tar.gz", repos = NULL, type = "source")
